 /*
http://projecteuler.net/problem=7
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number?
--
Done using eratosthenes sieve
*/

#include <iostream>
#include <math.h>
#include <vector>

using namespace std;

int main(){
  long long current = 9;
	vector<long long> primes;
	primes.push_back(2);
	primes.push_back(3);
	primes.push_back(5);
	primes.push_back(7);
	
	while(primes.size() < 10001){
		bool prime = true;
		for(int i = 0; i < primes.size(); i++){
			if(current%primes[i] == 0){
				prime = false;
				break;
			}
		}
		if(prime == true){
			primes.push_back(current);
			cout << current << endl; //last output is the 10001st prime
		}
		current++;
	}
	return 0;
}

