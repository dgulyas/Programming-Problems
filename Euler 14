/*
http://projecteuler.net/problem=14
The following iterative sequence is defined for the set of positive integers:

n -> n/2 (n is even)
n -> 3n + 1 (n is odd)

Using the rule above and starting with 13, we generate the following sequence:

13  40  20  10  5  16  8  4  2  1
It can be seen that this sequence (starting at 13 and finishing at 1) contains 10 terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at 1.

Which starting number, under one million, produces the longest chain?

NOTE: Once the chain starts the terms are allowed to go above one million.
*/

#include <iostream>
#include <sstream>

using namespace std;

long long collatz(long long num){
  long long count = 1; //count of how many cycles have been done
	while(num != 1){ 
		if(num%2 == 1)
	        num = num*3 + 1;
		else
	     	num = num / 2;
		count++;
			}
	return count;
}

int main(){
    long long lower = 1; //lower bound of the range
    long long upper = 1000001; //upper bound of the range
	long long maxCol = 0; //max number we've found so far
	long long maxIndex = 0;
	long long tmp;

   	for(long long i = lower; i <= upper; i++){
   		cout << "start: " << i << endl;
		if(collatz(i) > maxCol){
			maxCol = collatz(i);
			maxIndex = i;			
		}	
	}
	cout << upper << " " << lower << " " << maxIndex << endl;
	
	return 0;
}

